{"version":3,"sources":["ajax.js","log.js","memory.js","string.js","timer.js","url.js"],"names":["root","window","module","ajax","exports","parse","req","result","JSON","responseText","e","xhr","type","options","methods","success","error","XHR","XMLHttpRequest","ActiveXObject","request","url","location","href","replace","protocol","params","glue","match","__","string","serialize","open","setRequestHeader","headers","key","onreadystatechange","readyState","status","apply","send","data","callbacks","callback","get","post","put","_","extend","call","this","log","method","length","noop","console","enabled","memory","enable","set","disable","info","message","trace","warn","group","name","ungroup","groupEnd","storageType","localStorage","timestamper","time","unit","moment","add","unix","value","tmpMomentLocale","locale","timestamp","fromNow","cookie","expires","document","inside","i","expirationName","realName","cookies","split","charAt","substring","indexOf","delete","setItem","stringify","getItem","now","exp","removeItem","convert","object","characters","camelcase","trim","character","toUpperCase","count","caseInsensitive","toLowerCase","quote","surround","reverse","join","obj","encodeURIComponent","slice","slugfy","fromChar","toChar","slug","index","endsWith","wrapper","swapcase","unquote","startsWith","timer","start","tack","id","setInterval","duration","_milliseconds","stop","clearInterval","tick","instance","globalTLDs","RegExp","regionalTLDs","wildcardTLDs","address","domain","exact","host","hostname","hash","isExternal","param","search","parts","path","pathname","subdomain","shift","tld","tlds","part","push"],"mappings":"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","file":"longdash.js","sourcesContent":["\n//  Namespace: __\n//  Module: ajax\n\n(function()\n{\n    'use strict';\n\n    // Declare root variable\n\n    var root = window,\n        module = {};\n\n    module.ajax = (function ()\n    {\n        var exports = {};\n\n        // Helpers\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: parse\n\nvar parse = function (req) {\n\n    var result;\n\n    try {\n        result = JSON.parse(req.responseText);\n    } catch (e) {\n        result = req.responseText;\n    }\n\n    return [result, req];\n};\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: xhr\n\nvar xhr = function (type, options) {\n\n    var methods = {\n        success: function () {},\n        error: function () {}\n    };\n\n    var XHR = function () {\n        try {\n            return new window.XMLHttpRequest() || ActiveXObject;\n        } catch (error) {};\n    };\n\n    var request = new XHR('MSXML2.XMLHTTP.3.0');\n\n    // It options is a string, we assume it is the url\n\n    if (typeof options === 'string') {\n\n        var url = options;\n        options = {};\n        options.url = url;\n\n    }\n\n    // Remove hash and add protocol if not provided (prefilters might expect it)\n\n    options.url = ((options.url || location.href) + '').replace(/#.*$/, '').replace(/^\\/\\//, location.protocol + '//');\n\n    // Glue parameters\n\n    if (options.params) {\n        var glue = options.url.match(/\\?/g) ? '&' : '?';\n        options.url = options.url + glue + root.__.string.serialize(options.params);\n    }\n\n    // Open connection\n\n    request.open(type, options.url, true);\n\n    // If method is POST or PUT\n\n    if (type.match(/POST|PUT/g)) {\n        request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    }\n\n    // If we got headers, set them\n\n    if (options.headers) {\n\n        for (var key in options.headers) {\n            request.setRequestHeader(key, options.headers[key]);\n        }\n    }\n\n    // Set status response\n\n    request.onreadystatechange = function () {\n\n        if (request.readyState === 4) {\n            if (request.status >= 200 && request.status < 300) {\n                methods.success.apply(methods, parse(request));\n            } else {\n                methods.error.apply(methods, parse(request));\n            }\n        }\n    };\n\n    request.send(options.data);\n\n    var callbacks = {\n        success: function (callback) {\n            methods.success = callback;\n            return callbacks;\n        },\n        error: function (callback) {\n            methods.error = callback;\n            return callbacks;\n        }\n    };\n\n    return callbacks;\n};\n\n\n        // Methods\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: get\n\nexports.get = function (options) {\n    return xhr('GET', options);\n};\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: post\n\nexports.post = function (options) {\n    return xhr('POST', options);\n};\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: put\n\nexports.put = function (options) {\n    return xhr('PUT', options);\n};\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: delete\n\nexports.delete = function (options) {\n    return xhr('DELETE', options);\n};\n\n\n        return exports;\n\n    })();\n\n    // Export module to root Longdash object\n\n    root.__ = root._.extend((root.__ || root._), module);\n\n}).call(this);\n","\n//  Namespace: __\n//  Module: log\n\n(function()\n{\n    'use strict';\n\n    // Declare root variable\n\n    var root = window,\n        module = {};\n\n    module.log = (function ()\n    {\n        var exports = {};\n\n        // Helpers\n\n        //  Namespace: __\n//  Module: log\n//  Method: setup\n\n// Avoid \"console\" errors in browsers that lack a console.\n\nvar method,\n    methods = [\n        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error', 'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd', 'timeStamp', 'trace', 'warn'\n    ],\n    length = methods.length,\n    noop = function () {},\n    console = window.console || {};\n\nwhile (length--) {\n    method = methods[length];\n\n    // Only stub undefined methods.\n\n    if (!console[method]) {\n        console[method] = noop;\n    }\n}\n\n// Check if logging is enabled\n\nvar enabled = __.memory.get('LONGDASH: Log') || false;\n\n        //  Namespace: __\n//  Module: log\n//  Method: enable\n\nexports.enable = function () {\n    __.memory.set('LONGDASH: Log', true, 1, 'day');\n};\n\n        //  Namespace: __\n//  Module: log\n//  Method: disable\n\nexports.disable = function () {\n    __.memory.delete('LONGDASH: Log');\n};\n\n\n        // Methods\n\n        //  Namespace: __\n//  Module: log\n//  Method: info\n\nexports.info = function (message) {\n    if (enabled && message) { console.info(message); }\n};\n\n        //  Namespace: __\n//  Module: log\n//  Method: trace\n\nexports.trace = function (message) {\n    if (enabled && message) { console.trace(message); }\n};\n\n        //  Namespace: __\n//  Module: log\n//  Method: warn\n\nexports.warn = function (message) {\n    if (enabled && message) { console.warn(message); }\n};\n\n        //  Namespace: __\n//  Module: log\n//  Method: error\n\nexports.error = function (message) {\n    if (enabled && message) { console.error(message); }\n};\n\n        //  Namespace: __\n//  Module: log\n//  Method: group\n\nexports.group = function (name) {\n    if (enabled && name) { console.group(name); }\n};\n\n        //  Namespace: __\n//  Module: log\n//  Method: ungroup\n\nexports.ungroup = function () {\n    if (enabled) { console.groupEnd(); }\n};\n\n\n        return exports;\n\n    })();\n\n    // Export module to root Longdash object\n\n    root.__ = root._.extend((root.__ || root._), module);\n\n}).call(this);\n","\n//  Namespace: __\n//  Module: memory\n\n(function()\n{\n    'use strict';\n\n    // Declare root variable\n\n    var root = window,\n        module = {};\n\n    module.memory = (function ()\n    {\n        var exports = {};\n\n        // Helpers\n\n        //  Namespace: __\n//  Module: memory\n//  Method: type\n\nvar storageType = ('localStorage' in window && window.localStorage !== null) ? 'localStorage' : 'cookie';\n\n        //  Namespace: __\n//  Module: memory\n//  Method: timestamper\n\n//  Method to export current datetime in Timestamp Unix\n\nvar timestamper = function (time, unit) {\n    return moment().add(time, unit).unix();\n};\n\n\n        // Methods\n\n        //  Namespace: __\n//  Module: memory\n//  Method: set\n\nexports.set = function (name, value, time, unit) {\n\n    if (value) {\n        exports[storageType].set(name, value, time, unit);\n    } else {\n        __.log.warn('LONGDASH: Memory: Can\\'t store empty data.');\n        return false;\n    }\n};\n\n        //  Namespace: __\n//  Module: memory\n//  Method: get\n\nexports.get = function (name) {\n\n    var data = exports[storageType].get(name, true);\n\n    if (data) {\n\n        // Hold default locale settings\n        var tmpMomentLocale = moment.locale();\n        moment.locale('en');\n\n        __.log.info('LONGDASH: Memory: \"' + name + '\" will expire ' + moment().add(data.timestamp - moment().unix(), 'seconds').fromNow() + ' from ' + storageType + '.');\n\n        // Return to the default locale settings\n        moment.locale(tmpMomentLocale);\n\n        return data.value;\n\n    } else {\n        return null;\n    }\n};\n\n        //  Namespace: __\n//  Module: memory\n//  Method: delete\n\nexports.delete = function (name) {\n    exports[storageType].delete(name);\n};\n\n        //  Namespace: __\n//  Module: memory\n//  Method: cookie\n\nexports.cookie = {\n\n    // Set a new cookie\n\n    set: function (name, value, time, unit) {\n\n        var expires;\n\n        if (time) {\n            expires = '; expires=' + timestamper(time, unit);\n        } else {\n            expires = '';\n        }\n\n        // Set value/timestamp cookie\n\n        document.cookie = name + '-expires=' + timestamper(time, unit) + '; path=/';\n        document.cookie = name + '=' + value + expires + '; path=/';\n\n        __.log.info('LONGDASH: Memory: \"' + name + '\" [CREATED with cookies]');\n    },\n\n    // Return the cookie\n\n    get: function (name, inside) {\n\n        var i,\n            data = {},\n            expirationName = name + '-expires=',\n            realName = name + '=',\n            cookies = document.cookie.split(';');\n\n        for (i = 0; i < cookies.length; i++)\n        {\n            var cookie = cookies[i];\n\n            while (cookie.charAt(0) === ' ') {\n                cookie = cookie.substring(1, cookie.length);\n            }\n\n            // Get expiration datetime\n\n            if (cookie.indexOf(expirationName) === 0) {\n                data.timestamp = cookie.substring(expirationName.length, cookie.length);\n            }\n\n            // Get value\n\n            if (cookie.indexOf(realName) === 0) {\n                data.value = cookie.substring(realName.length, cookie.length);\n                return inside ? data : data.value;\n            }\n        }\n\n        return null;\n    },\n\n    // Delete a cookie\n\n    delete: function (name) {\n\n        // Delete both cookies\n\n        exports.set(name + '-expires', '', -1);\n        exports.set(name, '', -1);\n\n        __.log.warn('LONGDASH: Memory: \"' + name + '\" [DELETED from cookies]');\n    }\n};\n\n        //  Namespace: __\n//  Module: memory\n//  Method: localstorage\n\nexports.localStorage = {\n\n    // Set a new data on localStorage\n\n    set: function (name, value, time, unit) {\n\n        try {\n\n            window.localStorage.setItem(name, JSON.stringify({\n                'value': value,\n                'timestamp': timestamper(time, unit)\n            }));\n\n        } catch (e) {}\n\n        __.log.info('LONGDASH: Memory: \"' + name + '\" [CREATED with localStorage]');\n    },\n\n    // Return localStorage data\n\n    get: function (name) {\n\n        var data = window.localStorage.getItem(name);\n\n        if (data) {\n\n            data = JSON.parse(data);\n\n            var now = moment().unix(),\n                exp = data.timestamp;\n\n            if (exp > now) {\n                return data;\n            } else {\n                __.log.warn('LONGDASH: Memory: \"' + name + '\" has expired.');\n                exports.delete(name);\n                return null;\n            }\n\n        } else {\n            return null;\n        }\n    },\n\n    // Detele localStorage data\n\n    delete: function (name) {\n\n        window.localStorage.removeItem(name);\n        __.log.warn('LONGDASH: Memory: \"' + name + '\" [DELETED from localStorage]');\n    }\n};\n\n\n        return exports;\n\n    })();\n\n    // Export module to root Longdash object\n\n    root.__ = root._.extend((root.__ || root._), module);\n\n}).call(this);\n","\n//  Namespace: __\n//  Module: string\n\n(function()\n{\n    'use strict';\n\n    // Declare root variable\n\n    var root = window,\n        module = {};\n\n    module.string = (function ()\n    {\n        var exports = {};\n\n        // Helpers\n\n        //  Namespace: __\n//  Module: string\n//  Method: convert\n\nvar convert = function (object) {\n    \n    if (object == null) {\n        return '';\n    }\n    \n    return '' + object;\n};\n        //  Namespace: __\n//  Module: string\n//  Method: characters\n\nvar characters = function (string) {\n    return convert(string).split('');\n};\n\n        // Methods\n\n        //  Namespace: __\n//  Module: string\n//  Method: camelcase\n\nexports.camelcase = function (string) {\n    \n    string = convert(string);\n    \n    return root._.trim(string).replace(/[-_\\s]+(.)?/g, function(match, character) {\n        return character ? character.toUpperCase() : '';\n    });\n\n};\n        //  Namespace: __\n//  Module: string\n//  Method: count\n\nexports.count = function (string, substring, caseInsensitive) {\n\n    string = convert(string);\n    substring = convert(substring);\n    caseInsensitive = caseInsensitive || false;\n\n    var result;\n\n    if (string.length === 0 || substring.length === 0) {\n        return 0;\n    }\n\n    if (caseInsensitive) {\n        result = string.toLowerCase().split(substring.toLowerCase()).length - 1;\n    } else {\n        result = string.split(substring).length - 1;\n    }\n\n    return result;\n\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: quote\n\nexports.quote = function (string, quote) {\n\n    return exports.surround(string, quote || '\"');\n\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: reverse\n\nexports.reverse = function (string) {\n    \n    return characters(string).reverse().join('');\n\n};\n        //  Namespace: __\n//  Module: string\n//  Method: serialize\n\nexports.serialize = function (obj) {\n\n    var data = '';\n\n    for (var key in obj) {\n        data += key + '=' + encodeURIComponent(obj[key]) + '&';\n    }\n\n    data = data.slice(0,-1);\n\n    return data;\n\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: slugfy\n\nexports.slugfy = function (string) {\n\n    var fromChar = 'ąàáäâãåæăćčĉęèéëêĝĥìíïîĵłľńňòóöőôõðøśșšŝťțŭùúüűûñÿýçżźž',\n        toChar   = 'aaaaaaaaaccceeeeeghiiiijllnnoooooooossssttuuuuuunyyczzz';\n\n    fromChar += fromChar.toUpperCase();\n    toChar   += toChar.toUpperCase();\n\n    // Trim whitespaces and convert to lowercase\n\n    var slug = root._.trim(convert(string)).toLowerCase();\n\n    // Replace special characters\n\n    slug = slug.replace(/.{1}/g, function (character) {\n        var index = fromChar.indexOf(character);\n        return index === -1 ? character : toChar[index];\n    });\n\n    // Replace everything else with dashes and remove duplicated dashes\n\n    slug = slug.replace(/[-_\\s]+/g, '-').replace(/[^\\w\\s-]/g, '-').replace(/-+/g,'-');\n\n    // Remove trailing dash\n\n    if (root._.endsWith(string, '-')) {\n        slug = slug.slice(0, slug.length - 1);\n    }\n\n    return slug;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: surround\n\nexports.surround = function (string, wrapper) {\n\n    string = convert(string);\n\n    return [wrapper, string, wrapper].join('');\n\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: swapcase\n\nexports.swapcase = function (string) {\n    \n    string = convert(string);\n\n    return string.replace(/\\S/g, function (character) {\n        return character === character.toUpperCase() ? character.toLowerCase() : character.toUpperCase();\n    });\n\n};\n        //  Namespace: __\n//  Module: string\n//  Method: unquote\n\nexports.unquote = function (string) {\n\n    if (root._.startsWith(string, '\"' || \"'\") && root._.endsWith(string, '\"' || \"'\")) {\n        return string.slice(1, string.length - 1);\n    } else {\n        return string;\n    }\n\n};\n\n\n        return exports;\n\n    })();\n\n    // Export module to root Longdash object\n\n    root.__ = root._.extend((root.__ || root._), module);\n\n}).call(this);\n","\n//  Namespace: __\n//  Module: timer\n\n(function()\n{\n    'use strict';\n\n    // Declare root variable\n\n    var root = window,\n        module = {};\n\n    module.timer = (function ()\n    {\n        var exports = {};\n\n        // Inner Methods\n\n        //  Namespace: __\n//  Module: timer\n//  Method: start\n\nvar start = function (time, unit) {\n\n    var tack = this.tack;\n    this.enabled = true;\n\n    if (this.enabled) {\n        this.id = setInterval(tack, moment.duration(time, unit)._milliseconds);\n    }\n\n};\n\n        //  Namespace: __\n//  Module: timer\n//  Method: stop\n\nvar stop = function () {\n\n    this.enabled = false;\n    clearInterval(this.id);\n\n};\n\n        //  Namespace: __\n//  Module: timer\n//  Method: tick\n\nvar tick = function (callback) {\n    this.tack = callback;\n};\n\n\n        // Main Method\n\n        //  Namespace: __\n//  Module: timer\n//  Method: start\n\nexports.new = function (instance, callback) {\n\n    // Enables our helper methods on this new instance\n\n    this[instance] = (function ()\n    {\n        var exports = {};\n\n        exports.start = start;\n        exports.stop = stop;\n        exports.tick = tick;\n        exports.tack = callback || null;\n\n        return exports;\n\n    })();\n\n};\n\n\n        return exports;\n\n    })();\n\n    // Export module to root Longdash object\n\n    root.__ = root._.extend((root.__ || root._), module);\n\n}).call(this);\n","\n//  Namespace: __\n//  Module: url\n\n(function()\n{\n    'use strict';\n\n    // Declare root variable\n\n    var root = window,\n        module = {};\n\n    module.url = (function ()\n    {\n        var exports = {};\n\n        // Helpers\n\n        //  Namespace: __\n//  Module: string\n//  Method: data\n\nvar data = window.location;\n\n        //  Namespace: __\n//  Module: string\n//  Method: TLDs\n\nvar globalTLDs = new RegExp(/\\.(asia|aero|arpa|biz|com|co|edu|gov|guru|info|int|jobs|mil|mobi|name|net|org|pro|site|tel|work|web)(?:\\.|$)/g),\n    regionalTLDs = new RegExp(/\\.(ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|bq|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cw|cx|cy|cz|dd|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|krd|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zr|zw)$/g),\n    wildcardTLDs = new RegExp(/\\.(([a-z]{2,4})|()\\.[a-z]{2,3})(?:\\.|$)/g);\n\n// regionalTLDs  = /\\.(ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az)/;\n// regionalTLDs += /\\.(ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|bq|br|bs|bt|bv|bw|by|bz)/;\n// regionalTLDs += /\\.(ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cw|cx|cy|cz)/;\n// regionalTLDs += /\\.(dd|de|dj|dk|dm|do|dz)/;\n// regionalTLDs += /\\.(ec|ee|eg|eh|er|es|et|eu)/;\n// regionalTLDs += /\\.(fi|fj|fk|fm|fo|fr)/;\n// regionalTLDs += /\\.(ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy)/;\n// regionalTLDs += /\\.(hk|hm|hn|hr|ht|hu)/;\n// regionalTLDs += /\\.(id|ie|il|im|in|io|iq|ir|is|it)/;\n// regionalTLDs += /\\.(je|jm|jo|jp)/;\n// regionalTLDs += /\\.(ke|kg|kh|ki|km|kn|kp|kr|krd|kw|ky|kz)/;\n// regionalTLDs += /\\.(la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly)/;\n// regionalTLDs += /\\.(ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz)/;\n// regionalTLDs += /\\.(na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz)/;\n// regionalTLDs += /\\.(om)/;\n// regionalTLDs += /\\.(pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py)/;\n// regionalTLDs += /\\.(qa)/;\n// regionalTLDs += /\\.(re|ro|rs|ru|rw)/;\n// regionalTLDs += /\\.(sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz)/;\n// regionalTLDs += /\\.(tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz)/;\n// regionalTLDs += /\\.(ua|ug|uk|us|uy|uz)/;\n// regionalTLDs += /\\.(va|vc|ve|vg|vi|vn|vu)/;\n// regionalTLDs += /\\.(wf|ws)/;\n// regionalTLDs += /\\.(ye|yt|yu)/;\n// regionalTLDs += /\\.(za|zm|zr|zw)/;\n\n\n        // Methods\n\n        //  Namespace: __\n//  Module: string\n//  Method: address\n\nexports.address = function () {\n    return data.href;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: domain\n\nexports.domain = function (exact) {\n\n    var host = data.hostname;\n\n    exact = exact || true;\n\n    if (host.split('.').length < 3) {\n\n        return host.split('.')[0];\n\n    } else {\n\n        // Remove global and regional TLDs\n\n        if (exact) {\n            host = host.replace(regionalTLDs, '').replace(globalTLDs, '');\n        } else {\n            host = host.replace(wildcardTLDs, '').replace(wildcardTLDs, '');\n        }\n\n        // Remove subdomains (if available)\n\n        host = host.split('.');\n\n        if (host.length > 0) {\n            return host[host.length - 1];\n        }\n\n        return host[0];\n    }\n};\n\n//  domain.com\n//  www.domain.com\n//  www.sub.domain.com\n//  domain.co.jp\n//  www.domain.co.jp\n//  www.sub.domain.co.jp\n\n        //  Namespace: __\n//  Module: string\n//  Method: hash\n\nexports.hash = function () {\n    return data.hash;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: hash\n\nexports.isExternal = function (string) {\n    return string.match(data.hostname) ? true : false;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: param\n\nexports.param = function (name, reverse) {\n\n    var i,\n        location = data.search,\n        params = location.substring(1).split('&'),\n        reverse = reverse || false;\n\n    if (reverse) {\n        params.reverse();\n    }\n\n    for (i = 0; i < params.length; i++) {\n\n        var parts = params[i].split('=');\n\n        if (name === parts[0]) {\n           return parts[1];\n        }\n    }\n\n    return null;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: path\n\nexports.path = function () {\n    return data.pathname;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: protocol\n\nexports.protocol = function () {\n    return data.protocol;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: search\n\nexports.search = function () {\n    return data.search;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: subdomain\n\nexports.subdomain = function () {\n\n    var host = data.hostname;\n\n    if (host.split('.').length < 3) {\n\n        return host.split('.')[0];\n\n    } else {\n\n        // Remove global and regional TLDs\n\n        host = host.replace(regionalTLDs, '').replace(globalTLDs, '');\n\n        // Remove subdomains (if available)\n\n        host = host.split('.').shift();\n\n        return host;\n    }\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: TLD\n\nexports.tld = function (exact) {\n\n    var i,\n        match,\n        host = data.hostname,\n        tlds = [];\n\n    exact = exact || true;\n\n    if (host.split('.').length < 3) {\n\n        return host.split('.')[0];\n\n    } else {\n\n        var parts = host.split('.').reverse();\n\n        // Get global and regional TLDs\n\n        if (exact) {\n\n            for (i = 0; i < parts.length; i++) {\n\n                var part = ('.' + parts[i]);\n\n                match = part.match(regionalTLDs) || part.match(globalTLDs);\n\n                if (match) {\n                    tlds.push(match[0].replace('.', ''));\n                }\n\n                if (tlds.length > 1) break;\n            }\n\n        } else {\n\n            for (i = 0; i < parts.length; i++) {\n\n                match = ('.' + parts[i]).match(wildcardTLDs);\n\n                if (match) {\n                    tlds.push(match[0].replace('.', ''));\n                }\n\n                // Break if the elements has more than 4 letters (probably, a domain name)\n\n                if (tlds.length > 1 || parts[i].length > 4) break;\n            }\n\n        }\n\n        return tlds;\n    }\n};\n\n//  domain.com\n//  www.domain.com\n//  www.sub.domain.com\n//  domain.co.jp\n//  www.domain.co.jp\n//  www.sub.domain.co.jp\n\n\n        return exports;\n\n    })();\n\n    // Export module to root Longdash object\n\n    root.__ = root._.extend((root.__ || root._), module);\n\n}).call(this);\n"],"sourceRoot":"/source/"}