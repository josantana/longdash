{"version":3,"sources":["ajax.js","memory.js","string.js","timer.js","url.js"],"names":["root","window","module","ajax","exports","parse","req","result","JSON","responseText","e","xhr","type","options","methods","success","error","XHR","XMLHttpRequest","ActiveXObject","request","url","location","href","replace","protocol","params","glue","match","__","string","serialize","open","setRequestHeader","headers","key","onreadystatechange","readyState","status","apply","send","data","callbacks","callback","get","post","put","_","extend","call","this","memory","storageType","localStorage","timestamper","time","unit","moment","add","unix","set","name","value","console","log","tmpMomentLocale","locale","timestamp","fromNow","cookie","expires","document","inside","i","expirationName","realName","cookies","split","length","charAt","substring","indexOf","delete","setItem","stringify","getItem","now","exp","removeItem","convert","object","characters","camelcase","trim","character","toUpperCase","count","caseInsensitive","toLowerCase","quote","surround","reverse","join","obj","encodeURIComponent","slice","slugfy","fromChar","toChar","slug","index","endsWith","wrapper","swapcase","unquote","startsWith","timer","start","tack","enabled","id","setInterval","duration","_milliseconds","stop","clearInterval","tick","instance","globalTLDs","RegExp","regionalTLDs","wildcardTLDs","address","domain","exact","host","hostname","hash","isExternal","param","search","parts","path","pathname","subdomain","shift","tld","tlds","part","push"],"mappings":"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","file":"longdash.js","sourcesContent":["\r\n//  Namespace: __\r\n//  Module: ajax\r\n\r\n(function()\r\n{\r\n    'use strict';\r\n\r\n    // Declare root variable\r\n\r\n    var root = window,\r\n        module = {};\r\n\r\n    module.ajax = (function ()\r\n    {\r\n        var exports = {};\r\n\r\n        // Helpers\r\n\r\n        //  Namespace: __\r\n//  Module: ajax\r\n//  Method: parse\r\n\r\nvar parse = function (req) {\r\n\r\n    var result;\r\n\r\n    try {\r\n        result = JSON.parse(req.responseText);\r\n    } catch (e) {\r\n        result = req.responseText;\r\n    }\r\n\r\n    return [result, req];\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: ajax\r\n//  Method: xhr\r\n\r\nvar xhr = function (type, options) {\r\n\r\n    var methods = {\r\n        success: function () {},\r\n        error: function () {}\r\n    };\r\n\r\n    var XHR = function () {\r\n        try {\r\n            return new window.XMLHttpRequest() || ActiveXObject;\r\n        } catch (error) {};\r\n    };\r\n\r\n    var request = new XHR('MSXML2.XMLHTTP.3.0');\r\n\r\n    // It options is a string, we assume it is the url\r\n\r\n    if (typeof options === 'string') {\r\n\r\n        var url = options;\r\n        options = {};\r\n        options.url = url;\r\n\r\n    }\r\n\r\n    // Remove hash and add protocol if not provided (prefilters might expect it)\r\n\r\n    options.url = ((options.url || location.href) + '').replace(/#.*$/, '').replace(/^\\/\\//, location.protocol + '//');\r\n\r\n    // Glue parameters\r\n\r\n    if (options.params) {\r\n        var glue = options.url.match(/\\?/g) ? '&' : '?';\r\n        options.url = options.url + glue + root.__.string.serialize(options.params);\r\n    }\r\n\r\n    // Open connection\r\n\r\n    request.open(type, options.url, true);\r\n\r\n    // If method is POST or PUT\r\n\r\n    if (type.match(/POST|PUT/g)) {\r\n        request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n    }\r\n\r\n    // If we got headers, set them\r\n\r\n    if (options.headers) {\r\n\r\n        for (var key in options.headers) {\r\n            request.setRequestHeader(key, options.headers[key]);\r\n        }\r\n    }\r\n\r\n    // Set status response\r\n\r\n    request.onreadystatechange = function () {\r\n\r\n        if (request.readyState === 4) {\r\n            if (request.status >= 200 && request.status < 300) {\r\n                methods.success.apply(methods, parse(request));\r\n            } else {\r\n                methods.error.apply(methods, parse(request));\r\n            }\r\n        }\r\n    };\r\n\r\n    request.send(options.data);\r\n\r\n    var callbacks = {\r\n        success: function (callback) {\r\n            methods.success = callback;\r\n            return callbacks;\r\n        },\r\n        error: function (callback) {\r\n            methods.error = callback;\r\n            return callbacks;\r\n        }\r\n    };\r\n\r\n    return callbacks;\r\n};\r\n\r\n\r\n        // Methods\r\n\r\n        //  Namespace: __\r\n//  Module: ajax\r\n//  Method: get\r\n\r\nexports.get = function (options) {\r\n    return xhr('GET', options);\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: ajax\r\n//  Method: post\r\n\r\nexports.post = function (options) {\r\n    return xhr('POST', options);\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: ajax\r\n//  Method: put\r\n\r\nexports.put = function (options) {\r\n    return xhr('PUT', options);\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: ajax\r\n//  Method: delete\r\n\r\nexports.delete = function (options) {\r\n    return xhr('DELETE', options);\r\n};\r\n\r\n\r\n        return exports;\r\n\r\n    })();\r\n\r\n    // Export module to root Longdash object\r\n\r\n    root.__ = root._.extend((root.__ || root._), module);\r\n\r\n}).call(this);\r\n","\r\n//  Namespace: __\r\n//  Module: memory\r\n\r\n(function()\r\n{\r\n    'use strict';\r\n\r\n    // Declare root variable\r\n\r\n    var root = window,\r\n        module = {};\r\n\r\n    module.memory = (function ()\r\n    {\r\n        var exports = {};\r\n\r\n        // Helpers\r\n\r\n        //  Namespace: __\r\n//  Module: memory\r\n//  Method: type\r\n\r\nvar storageType = ('localStorage' in window && window.localStorage !== null) ? 'localStorage' : 'cookie';\r\n\r\n        //  Namespace: __\r\n//  Module: memory\r\n//  Method: timestamper\r\n\r\n//  Method to export current datetime in Timestamp Unix\r\n\r\nvar timestamper = function (time, unit) {\r\n    return moment().add(time, unit).unix();\r\n};\r\n\r\n\r\n        // Methods\r\n\r\n        //  Namespace: __\r\n//  Module: memory\r\n//  Method: set\r\n\r\nexports.set = function (name, value, time, unit) {\r\n\r\n    if (value) {\r\n        exports[storageType].set(name, value, time, unit);\r\n    } else {\r\n        console.log('LONGDASH: Memory: Can\\'t store empty data.');\r\n        return false;\r\n    }\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: memory\r\n//  Method: get\r\n\r\nexports.get = function (name) {\r\n\r\n    var data = exports[storageType].get(name, true);\r\n\r\n    if (data) {\r\n\r\n        // Hold default locale settings\r\n        var tmpMomentLocale = moment.locale();\r\n        moment.locale('en');\r\n\r\n        console.log('LONGDASH: Memory: \"' + name + '\" will expire ' + moment().add(data.timestamp - moment().unix(), 'seconds').fromNow() + ' from ' + storageType + '.');\r\n\r\n        // Return to the default locale settings\r\n        moment.locale(tmpMomentLocale);\r\n\r\n        return data.value;\r\n\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: memory\r\n//  Method: delete\r\n\r\nexports.delete = function (name) {\r\n    exports[storageType].delete(name);\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: memory\r\n//  Method: cookie\r\n\r\nexports.cookie = {\r\n\r\n    // Set a new cookie\r\n\r\n    set: function (name, value, time, unit) {\r\n\r\n        var expires;\r\n\r\n        if (time) {\r\n            expires = '; expires=' + timestamper(time, unit);\r\n        } else {\r\n            expires = '';\r\n        }\r\n\r\n        // Set value/timestamp cookie\r\n\r\n        document.cookie = name + '-expires=' + timestamper(time, unit) + '; path=/';\r\n        document.cookie = name + '=' + value + expires + '; path=/';\r\n\r\n        console.log('LONGDASH: Memory: \"' + name + '\" [CREATED with cookies]');\r\n    },\r\n\r\n    // Return the cookie\r\n\r\n    get: function (name, inside) {\r\n\r\n        var i,\r\n            data = {},\r\n            expirationName = name + '-expires=',\r\n            realName = name + '=',\r\n            cookies = document.cookie.split(';');\r\n\r\n        for (i = 0; i < cookies.length; i++)\r\n        {\r\n            var cookie = cookies[i];\r\n\r\n            while (cookie.charAt(0) === ' ') {\r\n                cookie = cookie.substring(1, cookie.length);\r\n            }\r\n\r\n            // Get expiration datetime\r\n\r\n            if (cookie.indexOf(expirationName) === 0) {\r\n                data.timestamp = cookie.substring(expirationName.length, cookie.length);\r\n            }\r\n\r\n            // Get value\r\n\r\n            if (cookie.indexOf(realName) === 0) {\r\n                data.value = cookie.substring(realName.length, cookie.length);\r\n                return inside ? data : data.value;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    // Delete a cookie\r\n\r\n    delete: function (name) {\r\n\r\n        // Delete both cookies\r\n\r\n        exports.set(name + '-expires', '', -1);\r\n        exports.set(name, '', -1);\r\n\r\n        console.log('LONGDASH: Memory: \"' + name + '\" [DELETED from cookies]');\r\n    }\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: memory\r\n//  Method: localstorage\r\n\r\nexports.localStorage = {\r\n\r\n    // Set a new data on localStorage\r\n\r\n    set: function (name, value, time, unit) {\r\n\r\n        try {\r\n\r\n            window.localStorage.setItem(name, JSON.stringify({\r\n                'value': value,\r\n                'timestamp': timestamper(time, unit)\r\n            }));\r\n\r\n        } catch (e) {}\r\n\r\n        console.log('LONGDASH: Memory: \"' + name + '\" [CREATED with localStorage]');\r\n    },\r\n\r\n    // Return localStorage data\r\n\r\n    get: function (name) {\r\n\r\n        var data = window.localStorage.getItem(name);\r\n\r\n        if (data) {\r\n\r\n            data = JSON.parse(data);\r\n\r\n            var now = moment().unix(),\r\n                exp = data.timestamp;\r\n\r\n            if (exp > now) {\r\n                return data;\r\n            } else {\r\n                console.log('LONGDASH: Memory: \"' + name + '\" has expired.');\r\n                exports.delete(name);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    // Detele localStorage data\r\n\r\n    delete: function (name) {\r\n\r\n        window.localStorage.removeItem(name);\r\n        console.log('LONGDASH: Memory: \"' + name + '\" [DELETED from localStorage]');\r\n    }\r\n};\r\n\r\n\r\n        return exports;\r\n\r\n    })();\r\n\r\n    // Export module to root Longdash object\r\n\r\n    root.__ = root._.extend((root.__ || root._), module);\r\n\r\n}).call(this);\r\n","\r\n//  Namespace: __\r\n//  Module: string\r\n\r\n(function()\r\n{\r\n    'use strict';\r\n\r\n    // Declare root variable\r\n\r\n    var root = window,\r\n        module = {};\r\n\r\n    module.string = (function ()\r\n    {\r\n        var exports = {};\r\n\r\n        // Helpers\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: convert\r\n\r\nvar convert = function (object) {\r\n    \r\n    if (object == null) {\r\n        return '';\r\n    }\r\n    \r\n    return '' + object;\r\n};\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: characters\r\n\r\nvar characters = function (string) {\r\n    return convert(string).split('');\r\n};\r\n\r\n        // Methods\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: camelcase\r\n\r\nexports.camelcase = function (string) {\r\n    \r\n    string = convert(string);\r\n    \r\n    return root._.trim(string).replace(/[-_\\s]+(.)?/g, function(match, character) {\r\n        return character ? character.toUpperCase() : '';\r\n    });\r\n\r\n};\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: count\r\n\r\nexports.count = function (string, substring, caseInsensitive) {\r\n\r\n    string = convert(string);\r\n    substring = convert(substring);\r\n    caseInsensitive = caseInsensitive || false;\r\n\r\n    var result;\r\n\r\n    if (string.length === 0 || substring.length === 0) {\r\n        return 0;\r\n    }\r\n\r\n    if (caseInsensitive) {\r\n        result = string.toLowerCase().split(substring.toLowerCase()).length - 1;\r\n    } else {\r\n        result = string.split(substring).length - 1;\r\n    }\r\n\r\n    return result;\r\n\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: quote\r\n\r\nexports.quote = function (string, quote) {\r\n\r\n    return exports.surround(string, quote || '\"');\r\n\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: reverse\r\n\r\nexports.reverse = function (string) {\r\n    \r\n    return characters(string).reverse().join('');\r\n\r\n};\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: serialize\r\n\r\nexports.serialize = function (obj) {\r\n\r\n    var data = '';\r\n\r\n    for (var key in obj) {\r\n        data += key + '=' + encodeURIComponent(obj[key]) + '&';\r\n    }\r\n\r\n    data = data.slice(0,-1);\r\n\r\n    return data;\r\n\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: slugfy\r\n\r\nexports.slugfy = function (string) {\r\n\r\n    var fromChar = 'ąàáäâãåæăćčĉęèéëêĝĥìíïîĵłľńňòóöőôõðøśșšŝťțŭùúüűûñÿýçżźž',\r\n        toChar   = 'aaaaaaaaaccceeeeeghiiiijllnnoooooooossssttuuuuuunyyczzz';\r\n\r\n    fromChar += fromChar.toUpperCase();\r\n    toChar   += toChar.toUpperCase();\r\n\r\n    // Trim whitespaces and convert to lowercase\r\n\r\n    var slug = root._.trim(convert(string)).toLowerCase();\r\n\r\n    // Replace special characters\r\n\r\n    slug = slug.replace(/.{1}/g, function (character) {\r\n        var index = fromChar.indexOf(character);\r\n        return index === -1 ? character : toChar[index];\r\n    });\r\n\r\n    // Replace everything else with dashes and remove duplicated dashes\r\n\r\n    slug = slug.replace(/[-_\\s]+/g, '-').replace(/[^\\w\\s-]/g, '-').replace(/-+/g,'-');\r\n\r\n    // Remove trailing dash\r\n\r\n    if (root._.endsWith(string, '-')) {\r\n        slug = slug.slice(0, slug.length - 1);\r\n    }\r\n\r\n    return slug;\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: surround\r\n\r\nexports.surround = function (string, wrapper) {\r\n\r\n    string = convert(string);\r\n\r\n    return [wrapper, string, wrapper].join('');\r\n\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: swapcase\r\n\r\nexports.swapcase = function (string) {\r\n    \r\n    string = convert(string);\r\n\r\n    return string.replace(/\\S/g, function (character) {\r\n        return character === character.toUpperCase() ? character.toLowerCase() : character.toUpperCase();\r\n    });\r\n\r\n};\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: unquote\r\n\r\nexports.unquote = function (string) {\r\n\r\n    if (root._.startsWith(string, '\"' || \"'\") && root._.endsWith(string, '\"' || \"'\")) {\r\n        return string.slice(1, string.length - 1);\r\n    } else {\r\n        return string;\r\n    }\r\n\r\n};\r\n\r\n\r\n        return exports;\r\n\r\n    })();\r\n\r\n    // Export module to root Longdash object\r\n\r\n    root.__ = root._.extend((root.__ || root._), module);\r\n\r\n}).call(this);\r\n","\r\n//  Namespace: __\r\n//  Module: timer\r\n\r\n(function()\r\n{\r\n    'use strict';\r\n\r\n    // Declare root variable\r\n\r\n    var root = window,\r\n        module = {};\r\n\r\n    module.timer = (function ()\r\n    {\r\n        var exports = {};\r\n\r\n        // Inner Methods\r\n\r\n        //  Namespace: __\r\n//  Module: timer\r\n//  Method: start\r\n\r\nvar start = function (time, unit) {\r\n\r\n    var tack = this.tack;\r\n    this.enabled = true;\r\n\r\n    if (this.enabled) {\r\n        this.id = setInterval(tack, moment.duration(time, unit)._milliseconds);\r\n    }\r\n\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: timer\r\n//  Method: stop\r\n\r\nvar stop = function () {\r\n\r\n    this.enabled = false;\r\n    clearInterval(this.id);\r\n\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: timer\r\n//  Method: tick\r\n\r\nvar tick = function (callback) {\r\n    this.tack = callback;\r\n};\r\n\r\n\r\n        // Main Method\r\n\r\n        //  Namespace: __\r\n//  Module: timer\r\n//  Method: start\r\n\r\nexports.new = function (instance, callback) {\r\n\r\n    // Enables our 3 helper methods for this new instance\r\n\r\n    this[instance] = (function ()\r\n    {\r\n        var exports = {};\r\n\r\n        exports.start = start;\r\n        exports.stop = stop;\r\n        exports.tick = tick;\r\n        exports.tack = callback || null;\r\n\r\n        return exports;\r\n\r\n    })();\r\n\r\n};\r\n\r\n\r\n        return exports;\r\n\r\n    })();\r\n\r\n    // Export module to root Longdash object\r\n\r\n    root.__ = root._.extend((root.__ || root._), module);\r\n\r\n}).call(this);\r\n","\r\n//  Namespace: __\r\n//  Module: url\r\n\r\n(function()\r\n{\r\n    'use strict';\r\n\r\n    // Declare root variable\r\n\r\n    var root = window,\r\n        module = {};\r\n\r\n    module.url = (function ()\r\n    {\r\n        var exports = {};\r\n\r\n        // Helpers\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: data\r\n\r\nvar data = window.location;\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: TLDs\r\n\r\nvar globalTLDs = new RegExp(/\\.(asia|aero|arpa|biz|com|co|edu|gov|guru|info|int|jobs|mil|mobi|name|net|org|pro|site|tel|work|web)(?:\\.|$)/g),\r\n    regionalTLDs = new RegExp(/\\.(ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|bq|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cw|cx|cy|cz|dd|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|krd|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zr|zw)$/g),\r\n    wildcardTLDs = new RegExp(/\\.(([a-z]{2,4})|()\\.[a-z]{2,3})(?:\\.|$)/g);\r\n\r\n// regionalTLDs  = /\\.(ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az)/;\r\n// regionalTLDs += /\\.(ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|bq|br|bs|bt|bv|bw|by|bz)/;\r\n// regionalTLDs += /\\.(ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cw|cx|cy|cz)/;\r\n// regionalTLDs += /\\.(dd|de|dj|dk|dm|do|dz)/;\r\n// regionalTLDs += /\\.(ec|ee|eg|eh|er|es|et|eu)/;\r\n// regionalTLDs += /\\.(fi|fj|fk|fm|fo|fr)/;\r\n// regionalTLDs += /\\.(ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy)/;\r\n// regionalTLDs += /\\.(hk|hm|hn|hr|ht|hu)/;\r\n// regionalTLDs += /\\.(id|ie|il|im|in|io|iq|ir|is|it)/;\r\n// regionalTLDs += /\\.(je|jm|jo|jp)/;\r\n// regionalTLDs += /\\.(ke|kg|kh|ki|km|kn|kp|kr|krd|kw|ky|kz)/;\r\n// regionalTLDs += /\\.(la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly)/;\r\n// regionalTLDs += /\\.(ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz)/;\r\n// regionalTLDs += /\\.(na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz)/;\r\n// regionalTLDs += /\\.(om)/;\r\n// regionalTLDs += /\\.(pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py)/;\r\n// regionalTLDs += /\\.(qa)/;\r\n// regionalTLDs += /\\.(re|ro|rs|ru|rw)/;\r\n// regionalTLDs += /\\.(sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz)/;\r\n// regionalTLDs += /\\.(tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz)/;\r\n// regionalTLDs += /\\.(ua|ug|uk|us|uy|uz)/;\r\n// regionalTLDs += /\\.(va|vc|ve|vg|vi|vn|vu)/;\r\n// regionalTLDs += /\\.(wf|ws)/;\r\n// regionalTLDs += /\\.(ye|yt|yu)/;\r\n// regionalTLDs += /\\.(za|zm|zr|zw)/;\r\n\r\n\r\n        // Methods\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: address\r\n\r\nexports.address = function () {\r\n    return data.href;\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: domain\r\n\r\nexports.domain = function (exact) {\r\n\r\n    var host = data.hostname;\r\n\r\n    exact = exact || true;\r\n\r\n    if (host.split('.').length < 3) {\r\n\r\n        return host.split('.')[0];\r\n\r\n    } else {\r\n\r\n        // Remove global and regional TLDs\r\n\r\n        if (exact) {\r\n            host = host.replace(regionalTLDs, '').replace(globalTLDs, '');\r\n        } else {\r\n            host = host.replace(wildcardTLDs, '').replace(wildcardTLDs, '');\r\n        }\r\n\r\n        // Remove subdomains (if available)\r\n\r\n        host = host.split('.');\r\n\r\n        if (host.length > 0) {\r\n            return host[host.length - 1];\r\n        }\r\n\r\n        return host[0];\r\n    }\r\n};\r\n\r\n//  domain.com\r\n//  www.domain.com\r\n//  www.sub.domain.com\r\n//  domain.co.jp\r\n//  www.domain.co.jp\r\n//  www.sub.domain.co.jp\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: hash\r\n\r\nexports.hash = function () {\r\n    return data.hash;\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: hash\r\n\r\nexports.isExternal = function (string) {\r\n    return string.match(data.hostname) ? true : false;\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: param\r\n\r\nexports.param = function (name, reverse) {\r\n\r\n    var i,\r\n        location = data.search,\r\n        params = location.substring(1).split('&'),\r\n        reverse = reverse || false;\r\n\r\n    if (reverse) {\r\n        params.reverse();\r\n    }\r\n\r\n    for (i = 0; i < params.length; i++) {\r\n\r\n        var parts = params[i].split('=');\r\n\r\n        if (name === parts[0]) {\r\n           return parts[1];\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: path\r\n\r\nexports.path = function () {\r\n    return data.pathname;\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: protocol\r\n\r\nexports.protocol = function () {\r\n    return data.protocol;\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: search\r\n\r\nexports.search = function () {\r\n    return data.search;\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: subdomain\r\n\r\nexports.subdomain = function () {\r\n\r\n    var host = data.hostname;\r\n\r\n    if (host.split('.').length < 3) {\r\n\r\n        return host.split('.')[0];\r\n\r\n    } else {\r\n\r\n        // Remove global and regional TLDs\r\n\r\n        host = host.replace(regionalTLDs, '').replace(globalTLDs, '');\r\n\r\n        // Remove subdomains (if available)\r\n\r\n        host = host.split('.').shift();\r\n\r\n        return host;\r\n    }\r\n};\r\n\r\n        //  Namespace: __\r\n//  Module: string\r\n//  Method: TLD\r\n\r\nexports.tld = function (exact) {\r\n\r\n    var i,\r\n        match,\r\n        host = data.hostname,\r\n        tlds = [];\r\n\r\n    exact = exact || true;\r\n\r\n    if (host.split('.').length < 3) {\r\n\r\n        return host.split('.')[0];\r\n\r\n    } else {\r\n\r\n        var parts = host.split('.').reverse();\r\n\r\n        // Get global and regional TLDs\r\n\r\n        if (exact) {\r\n\r\n            for (i = 0; i < parts.length; i++) {\r\n\r\n                var part = ('.' + parts[i]);\r\n\r\n                match = part.match(regionalTLDs) || part.match(globalTLDs);\r\n\r\n                if (match) {\r\n                    tlds.push(match[0].replace('.', ''));\r\n                }\r\n\r\n                if (tlds.length > 1) break;\r\n            }\r\n\r\n        } else {\r\n\r\n            for (i = 0; i < parts.length; i++) {\r\n\r\n                match = ('.' + parts[i]).match(wildcardTLDs);\r\n\r\n                if (match) {\r\n                    tlds.push(match[0].replace('.', ''));\r\n                }\r\n\r\n                // Break if the elements has more than 4 letters (probably, a domain name)\r\n\r\n                if (tlds.length > 1 || parts[i].length > 4) break;\r\n            }\r\n\r\n        }\r\n\r\n        return tlds;\r\n    }\r\n};\r\n\r\n//  domain.com\r\n//  www.domain.com\r\n//  www.sub.domain.com\r\n//  domain.co.jp\r\n//  www.domain.co.jp\r\n//  www.sub.domain.co.jp\r\n\r\n\r\n        return exports;\r\n\r\n    })();\r\n\r\n    // Export module to root Longdash object\r\n\r\n    root.__ = root._.extend((root.__ || root._), module);\r\n\r\n}).call(this);\r\n"],"sourceRoot":"/source/"}