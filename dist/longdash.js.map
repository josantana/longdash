{"version":3,"sources":["ajax.js","memory.js","string.js","url.js"],"names":["root","window","module","ajax","exports","parse","req","result","JSON","responseText","e","xhr","type","options","methods","success","error","XHR","XMLHttpRequest","ActiveXObject","request","url","location","href","replace","protocol","params","glue","match","__","string","serialize","open","setRequestHeader","headers","key","onreadystatechange","readyState","status","apply","send","data","callbacks","callback","get","post","put","_","extend","call","this","memory","storageType","localStorage","timestamper","time","unit","moment","add","unix","set","name","value","console","log","tmpMomentLocale","locale","timestamp","fromNow","cookie","expires","document","inside","i","expirationName","realName","cookies","split","length","charAt","substring","indexOf","delete","setItem","stringify","getItem","now","exp","removeItem","convert","object","characters","camelcase","trim","character","toUpperCase","count","caseInsensitive","toLowerCase","quote","surround","reverse","join","obj","encodeURIComponent","slice","slugfy","fromChar","toChar","slug","index","endsWith","wrapper","swapcase","unquote","startsWith","globalTLDs","RegExp","regionalTLDs","wildcardTLDs","address","domain","exact","host","hostname","hash","isExternal","param","search","parts","path","pathname","subdomain","shift","tld","tlds","part","push"],"mappings":"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","file":"longdash.js","sourcesContent":["\n//  Namespace: __\n//  Module: ajax\n\n(function()\n{\n    'use strict';\n\n    // Declare root variable\n\n    var root = window,\n        module = {};\n\n    module.ajax = (function ()\n    {\n        var exports = {};\n\n        // Helpers\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: parse\n\nvar parse = function (req) {\n\n    var result;\n\n    try {\n        result = JSON.parse(req.responseText);\n    } catch (e) {\n        result = req.responseText;\n    }\n\n    return [result, req];\n};\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: xhr\n\nvar xhr = function (type, options) {\n\n    var methods = {\n        success: function () {},\n        error: function () {}\n    };\n\n    var XHR = function () {\n        try {\n            return new window.XMLHttpRequest() || ActiveXObject;\n        } catch (error) {};\n    };\n\n    var request = new XHR('MSXML2.XMLHTTP.3.0');\n\n    // It options is a string, we assume it is the url\n\n    if (typeof options === 'string') {\n\n        var url = options;\n        options = {};\n        options.url = url;\n\n    }\n\n    // Remove hash and add protocol if not provided (prefilters might expect it)\n\n    options.url = ((options.url || location.href) + '').replace(/#.*$/, '').replace(/^\\/\\//, location.protocol + '//');\n\n    // Glue parameters\n\n    if (options.params) {\n        var glue = options.url.match(/\\?/g) ? '&' : '?';\n        options.url = options.url + glue + root.__.string.serialize(options.params);\n    }\n\n    // Open connection\n\n    request.open(type, options.url, true);\n\n    // If method is POST or PUT\n\n    if (type.match(/POST|PUT/g)) {\n        request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    }\n\n    // If we got headers, set them\n\n    if (options.headers) {\n\n        for (var key in options.headers) {\n            request.setRequestHeader(key, options.headers[key]);\n        }\n    }\n\n    // Set status response\n\n    request.onreadystatechange = function () {\n\n        if (request.readyState === 4) {\n            if (request.status >= 200 && request.status < 300) {\n                methods.success.apply(methods, parse(request));\n            } else {\n                methods.error.apply(methods, parse(request));\n            }\n        }\n    };\n\n    request.send(options.data);\n\n    var callbacks = {\n        success: function (callback) {\n            methods.success = callback;\n            return callbacks;\n        },\n        error: function (callback) {\n            methods.error = callback;\n            return callbacks;\n        }\n    };\n\n    return callbacks;\n};\n\n\n        // Methods\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: get\n\nexports.get = function (options) {\n    return xhr('GET', options);\n};\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: post\n\nexports.post = function (options) {\n    return xhr('POST', options);\n};\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: put\n\nexports.put = function (options) {\n    return xhr('PUT', options);\n};\n\n        //  Namespace: __\n//  Module: ajax\n//  Method: delete\n\nexports.delete = function (options) {\n    return xhr('DELETE', options);\n};\n\n\n        return exports;\n\n    })();\n\n    // Export module to root Longdash object\n\n    root.__ = root._.extend((root.__ || root._), module);\n\n}).call(this);\n","\n//  Namespace: __\n//  Module: memory\n\n(function()\n{\n    'use strict';\n\n    // Declare root variable\n\n    var root = window,\n        module = {};\n\n    module.memory = (function ()\n    {\n        var exports = {};\n\n        // Helpers\n\n        //  Namespace: __\n//  Module: memory\n//  Method: type\n\nvar storageType = ('localStorage' in window && window.localStorage !== null) ? 'localStorage' : 'cookie';\n\n        //  Namespace: __\n//  Module: memory\n//  Method: timestamper\n\n//  Method to export current datetime in Timestamp Unix\n\nvar timestamper = function (time, unit) {\n    return moment().add(time, unit).unix();\n};\n\n\n        // Methods\n\n        //  Namespace: __\n//  Module: memory\n//  Method: set\n\nexports.set = function (name, value, time, unit) {\n\n    if (value) {\n        exports[storageType].set(name, value, time, unit);\n    } else {\n        console.log('LONGDASH: Memory: Can\\'t store empty data.');\n        return false;\n    }\n};\n\n        //  Namespace: __\n//  Module: memory\n//  Method: get\n\nexports.get = function (name) {\n\n    var data = exports[storageType].get(name, true);\n\n    if (data) {\n\n        // Hold default locale settings\n        var tmpMomentLocale = moment.locale();\n        moment.locale('en');\n\n        console.log('LONGDASH: Memory: \"' + name + '\" will expire ' + moment().add(data.timestamp - moment().unix(), 'seconds').fromNow() + ' from ' + storageType + '.');\n\n        // Return to the default locale settings\n        moment.locale(tmpMomentLocale);\n\n        return data.value;\n\n    } else {\n        return null;\n    }\n};\n\n        //  Namespace: __\n//  Module: memory\n//  Method: delete\n\nexports.delete = function (name) {\n    exports[storageType].delete(name);\n};\n\n        //  Namespace: __\n//  Module: memory\n//  Method: cookie\n\nexports.cookie = {\n\n    // Set a new cookie\n\n    set: function (name, value, time, unit) {\n\n        var expires;\n\n        if (time) {\n            expires = '; expires=' + timestamper(time, unit);\n        } else {\n            expires = '';\n        }\n\n        // Set value/timestamp cookie\n\n        document.cookie = name + '-expires=' + timestamper(time, unit) + '; path=/';\n        document.cookie = name + '=' + value + expires + '; path=/';\n\n        console.log('LONGDASH: Memory: \"' + name + '\" [CREATED with cookies]');\n    },\n\n    // Return the cookie\n\n    get: function (name, inside) {\n\n        var i,\n            data = {},\n            expirationName = name + '-expires=',\n            realName = name + '=',\n            cookies = document.cookie.split(';');\n\n        for (i = 0; i < cookies.length; i++)\n        {\n            var cookie = cookies[i];\n\n            while (cookie.charAt(0) === ' ') {\n                cookie = cookie.substring(1, cookie.length);\n            }\n\n            // Get expiration datetime\n\n            if (cookie.indexOf(expirationName) === 0) {\n                data.timestamp = cookie.substring(expirationName.length, cookie.length);\n            }\n\n            // Get value\n\n            if (cookie.indexOf(realName) === 0) {\n                data.value = cookie.substring(realName.length, cookie.length);\n                return inside ? data : data.value;\n            }\n        }\n\n        return null;\n    },\n\n    // Delete a cookie\n\n    delete: function (name) {\n\n        // Delete both cookies\n\n        exports.set(name + '-expires', '', -1);\n        exports.set(name, '', -1);\n\n        console.log('LONGDASH: Memory: \"' + name + '\" [DELETED from cookies]');\n    }\n};\n\n        //  Namespace: __\n//  Module: memory\n//  Method: localstorage\n\nexports.localStorage = {\n\n    // Set a new data on localStorage\n\n    set: function (name, value, time, unit) {\n\n        try {\n\n            window.localStorage.setItem(name, JSON.stringify({\n                'value': value,\n                'timestamp': timestamper(time, unit)\n            }));\n\n        } catch (e) {}\n\n        console.log('LONGDASH: Memory: \"' + name + '\" [CREATED with localStorage]');\n    },\n\n    // Return localStorage data\n\n    get: function (name) {\n\n        var data = window.localStorage.getItem(name);\n\n        if (data) {\n\n            data = JSON.parse(data);\n\n            var now = moment().unix(),\n                exp = data.timestamp;\n\n            if (exp > now) {\n                return data;\n            } else {\n                console.log('LONGDASH: Memory: \"' + name + '\" has expired.');\n                exports.delete(name);\n                return null;\n            }\n\n        } else {\n            return null;\n        }\n    },\n\n    // Detele localStorage data\n\n    delete: function (name) {\n\n        window.localStorage.removeItem(name);\n        console.log('LONGDASH: Memory: \"' + name + '\" [DELETED from localStorage]');\n    }\n};\n\n\n        return exports;\n\n    })();\n\n    // Export module to root Longdash object\n\n    root.__ = root._.extend((root.__ || root._), module);\n\n}).call(this);\n","\n//  Namespace: __\n//  Module: string\n\n(function()\n{\n    'use strict';\n\n    // Declare root variable\n\n    var root = window,\n        module = {};\n\n    module.string = (function ()\n    {\n        var exports = {};\n\n        // Helpers\n\n        //  Namespace: __\n//  Module: string\n//  Method: convert\n\nvar convert = function (object) {\n    \n    if (object == null) {\n        return '';\n    }\n    \n    return '' + object;\n};\n        //  Namespace: __\n//  Module: string\n//  Method: characters\n\nvar characters = function (string) {\n    return convert(string).split('');\n};\n\n        // Methods\n\n        //  Namespace: __\n//  Module: string\n//  Method: camelcase\n\nexports.camelcase = function (string) {\n    \n    string = convert(string);\n    \n    return root._.trim(string).replace(/[-_\\s]+(.)?/g, function(match, character) {\n        return character ? character.toUpperCase() : '';\n    });\n\n};\n        //  Namespace: __\n//  Module: string\n//  Method: count\n\nexports.count = function (string, substring, caseInsensitive) {\n\n    string = convert(string);\n    substring = convert(substring);\n    caseInsensitive = caseInsensitive || false;\n\n    var result;\n\n    if (string.length === 0 || substring.length === 0) {\n        return 0;\n    }\n\n    if (caseInsensitive) {\n        result = string.toLowerCase().split(substring.toLowerCase()).length - 1;\n    } else {\n        result = string.split(substring).length - 1;\n    }\n\n    return result;\n\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: quote\n\nexports.quote = function (string, quote) {\n\n    return exports.surround(string, quote || '\"');\n\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: reverse\n\nexports.reverse = function (string) {\n    \n    return characters(string).reverse().join('');\n\n};\n        //  Namespace: __\n//  Module: string\n//  Method: serialize\n\nexports.serialize = function (obj) {\n\n    var data = '';\n\n    for (var key in obj) {\n        data += key + '=' + encodeURIComponent(obj[key]) + '&';\n    }\n\n    data = data.slice(0,-1);\n\n    return data;\n\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: slugfy\n\nexports.slugfy = function (string) {\n\n    var fromChar = 'ąàáäâãåæăćčĉęèéëêĝĥìíïîĵłľńňòóöőôõðøśșšŝťțŭùúüűûñÿýçżźž',\n        toChar   = 'aaaaaaaaaccceeeeeghiiiijllnnoooooooossssttuuuuuunyyczzz';\n\n    fromChar += fromChar.toUpperCase();\n    toChar   += toChar.toUpperCase();\n\n    // Trim whitespaces and convert to lowercase\n\n    var slug = root._.trim(convert(string)).toLowerCase();\n\n    // Replace special characters\n\n    slug = slug.replace(/.{1}/g, function (character) {\n        var index = fromChar.indexOf(character);\n        return index === -1 ? character : toChar[index];\n    });\n\n    // Replace everything else with dashes and remove duplicated dashes\n\n    slug = slug.replace(/[-_\\s]+/g, '-').replace(/[^\\w\\s-]/g, '-').replace(/-+/g,'-');\n\n    // Remove trailing dash\n\n    if (root._.endsWith(string, '-')) {\n        slug = slug.slice(0, slug.length - 1);\n    }\n\n    return slug;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: surround\n\nexports.surround = function (string, wrapper) {\n\n    string = convert(string);\n\n    return [wrapper, string, wrapper].join('');\n\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: swapcase\n\nexports.swapcase = function (string) {\n    \n    string = convert(string);\n\n    return string.replace(/\\S/g, function (character) {\n        return character === character.toUpperCase() ? character.toLowerCase() : character.toUpperCase();\n    });\n\n};\n        //  Namespace: __\n//  Module: string\n//  Method: unquote\n\nexports.unquote = function (string) {\n\n    if (root._.startsWith(string, '\"' || \"'\") && root._.endsWith(string, '\"' || \"'\")) {\n        return string.slice(1, string.length - 1);\n    } else {\n        return string;\n    }\n\n};\n\n\n        return exports;\n\n    })();\n\n    // Export module to root Longdash object\n\n    root.__ = root._.extend((root.__ || root._), module);\n\n}).call(this);\n","\n//  Namespace: __\n//  Module: url\n\n(function()\n{\n    'use strict';\n\n    // Declare root variable\n\n    var root = window,\n        module = {};\n\n    module.url = (function ()\n    {\n        var exports = {};\n\n        // Helpers\n\n        //  Namespace: __\n//  Module: string\n//  Method: data\n\nvar data = window.location;\n\n        //  Namespace: __\n//  Module: string\n//  Method: TLDs\n\nvar globalTLDs = new RegExp(/\\.(asia|aero|arpa|biz|com|co|edu|gov|guru|info|int|jobs|mil|mobi|name|net|org|pro|site|tel|work|web)(?:\\.|$)/g),\n    regionalTLDs = new RegExp(/\\.(ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|bq|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cw|cx|cy|cz|dd|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|krd|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zr|zw)$/g),\n    wildcardTLDs = new RegExp(/\\.(([a-z]{2,4})|()\\.[a-z]{2,3})(?:\\.|$)/g);\n\n// regionalTLDs  = /\\.(ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az)/;\n// regionalTLDs += /\\.(ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|bq|br|bs|bt|bv|bw|by|bz)/;\n// regionalTLDs += /\\.(ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cw|cx|cy|cz)/;\n// regionalTLDs += /\\.(dd|de|dj|dk|dm|do|dz)/;\n// regionalTLDs += /\\.(ec|ee|eg|eh|er|es|et|eu)/;\n// regionalTLDs += /\\.(fi|fj|fk|fm|fo|fr)/;\n// regionalTLDs += /\\.(ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy)/;\n// regionalTLDs += /\\.(hk|hm|hn|hr|ht|hu)/;\n// regionalTLDs += /\\.(id|ie|il|im|in|io|iq|ir|is|it)/;\n// regionalTLDs += /\\.(je|jm|jo|jp)/;\n// regionalTLDs += /\\.(ke|kg|kh|ki|km|kn|kp|kr|krd|kw|ky|kz)/;\n// regionalTLDs += /\\.(la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly)/;\n// regionalTLDs += /\\.(ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz)/;\n// regionalTLDs += /\\.(na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz)/;\n// regionalTLDs += /\\.(om)/;\n// regionalTLDs += /\\.(pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py)/;\n// regionalTLDs += /\\.(qa)/;\n// regionalTLDs += /\\.(re|ro|rs|ru|rw)/;\n// regionalTLDs += /\\.(sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz)/;\n// regionalTLDs += /\\.(tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz)/;\n// regionalTLDs += /\\.(ua|ug|uk|us|uy|uz)/;\n// regionalTLDs += /\\.(va|vc|ve|vg|vi|vn|vu)/;\n// regionalTLDs += /\\.(wf|ws)/;\n// regionalTLDs += /\\.(ye|yt|yu)/;\n// regionalTLDs += /\\.(za|zm|zr|zw)/;\n\n\n        // Methods\n\n        //  Namespace: __\n//  Module: string\n//  Method: address\n\nexports.address = function () {\n    return data.href;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: domain\n\nexports.domain = function (exact) {\n\n    var host = data.hostname;\n\n    exact = exact || true;\n\n    if (host.split('.').length < 3) {\n\n        return host.split('.')[0];\n\n    } else {\n\n        // Remove global and regional TLDs\n\n        if (exact) {\n            host = host.replace(regionalTLDs, '').replace(globalTLDs, '');\n        } else {\n            host = host.replace(wildcardTLDs, '').replace(wildcardTLDs, '');\n        }\n\n        // Remove subdomains (if available)\n\n        host = host.split('.');\n\n        if (host.length > 0) {\n            return host[host.length - 1];\n        }\n\n        return host[0];\n    }\n};\n\n//  domain.com\n//  www.domain.com\n//  www.sub.domain.com\n//  domain.co.jp\n//  www.domain.co.jp\n//  www.sub.domain.co.jp\n\n        //  Namespace: __\n//  Module: string\n//  Method: hash\n\nexports.hash = function () {\n    return data.hash;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: hash\n\nexports.isExternal = function (string) {\n    return string.match(data.hostname) ? true : false;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: param\n\nexports.param = function (name, reverse) {\n\n    var i,\n        location = data.search,\n        params = location.substring(1).split('&'),\n        reverse = reverse || false;\n\n    if (reverse) {\n        params.reverse();\n    }\n\n    for (i = 0; i < params.length; i++) {\n\n        var parts = params[i].split('=');\n\n        if (name === parts[0]) {\n           return parts[1];\n        }\n    }\n\n    return null;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: path\n\nexports.path = function () {\n    return data.pathname;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: protocol\n\nexports.protocol = function () {\n    return data.protocol;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: search\n\nexports.search = function () {\n    return data.search;\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: subdomain\n\nexports.subdomain = function () {\n\n    var host = data.hostname;\n\n    if (host.split('.').length < 3) {\n\n        return host.split('.')[0];\n\n    } else {\n\n        // Remove global and regional TLDs\n\n        host = host.replace(regionalTLDs, '').replace(globalTLDs, '');\n\n        // Remove subdomains (if available)\n\n        host = host.split('.').shift();\n\n        return host;\n    }\n};\n\n        //  Namespace: __\n//  Module: string\n//  Method: TLD\n\nexports.tld = function (exact) {\n\n    var i,\n        match,\n        host = data.hostname,\n        tlds = [];\n\n    exact = exact || true;\n\n    if (host.split('.').length < 3) {\n\n        return host.split('.')[0];\n\n    } else {\n\n        var parts = host.split('.').reverse();\n\n        // Get global and regional TLDs\n\n        if (exact) {\n\n            for (i = 0; i < parts.length; i++) {\n\n                var part = ('.' + parts[i]);\n\n                match = part.match(regionalTLDs) || part.match(globalTLDs);\n\n                if (match) {\n                    tlds.push(match[0].replace('.', ''));\n                }\n\n                if (tlds.length > 1) break;\n            }\n\n        } else {\n\n            for (i = 0; i < parts.length; i++) {\n\n                match = ('.' + parts[i]).match(wildcardTLDs);\n\n                if (match) {\n                    tlds.push(match[0].replace('.', ''));\n                }\n\n                // Break if the elements has more than 4 letters (probably, a domain name)\n\n                if (tlds.length > 1 || parts[i].length > 4) break;\n            }\n\n        }\n\n        return tlds;\n    }\n};\n\n//  domain.com\n//  www.domain.com\n//  www.sub.domain.com\n//  domain.co.jp\n//  www.domain.co.jp\n//  www.sub.domain.co.jp\n\n\n        return exports;\n\n    })();\n\n    // Export module to root Longdash object\n\n    root.__ = root._.extend((root.__ || root._), module);\n\n}).call(this);\n"],"sourceRoot":"/source/"}